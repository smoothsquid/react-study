{"version":3,"sources":["reportWebVitals.js","Home.js","About.js","RemCalculator.js","TemplateConverter.js","App.js","Root.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Home","About","RemCalculator","props","state","fontSize","inputData","result","calculateResult","console","log","setState","handleInputDataChange","event","target","value","handleFontSizeChange","nextProps","nextState","prevProps","prevState","className","this","title","htmlFor","type","id","onChange","onClick","Component","defaultProps","TemplateConverter","inputText","outputText","variableName","convert","text","textLines","split","resultLines","forEach","line","push","join","handleClickConvertButton","handleChangeInputText","cols","rows","readOnly","App","menuList","home","showRemCalculator","showMenu","menuName","Object","keys","key","showHome","exact","to","activeClassName","path","component","Root","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.74473eeb.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n            <h2>Home</h2>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst About = () => (\r\n    <div>\r\n        <h2>About</h2>\r\n    </div>\r\n);\r\n\r\nexport default About;","import { Component } from \"react\";\r\n\r\nclass RemCalculator extends Component {\r\n\r\n    static defaultProps = {\r\n        title: \"Rem Calculator\"\r\n    };\r\n    state = {\r\n        fontSize: 16,\r\n        inputData: 0,\r\n        result: 0,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"Start RemCalculator\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        // console.log('componentDidMount');\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        // console.log('shouldComponentUpdate');\r\n        // if (nextState.number % 5 === 0) return false;\r\n        return true;\r\n    }\r\n\r\n    // componentWillUpdate(nextProps, nextState) {\r\n    //     console.log('componentWillUpdate');\r\n    // }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        // console.log('componentDidUpdate');\r\n    }\r\n\r\n    calculateResult = () => {\r\n        console.log(\"hello\");\r\n        this.setState({\r\n            result: this.state.inputData / this.state.fontSize\r\n        });\r\n    };\r\n\r\n    handleInputDataChange = (event) => {\r\n        this.setState({\r\n            inputData: event.target.value\r\n        }, ()=>{\r\n            this.calculateResult();\r\n        });\r\n    };\r\n\r\n    handleFontSizeChange = (event) => {\r\n        this.setState({\r\n            fontSize: event.target.value\r\n        });\r\n    };\r\n    render() {\r\n        return (\r\n            <div className=\"RemCalculator Content\">\r\n                <h1>{this.props.title}</h1>\r\n                <div>\r\n                    <label htmlFor=\"fontSize\">Font Size</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        id=\"fontSize\"\r\n                        value={this.state.fontSize}\r\n                        onChange={this.handleFontSizeChange} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"insertedNumber\">Size(px)</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        id=\"insertedNumber\"\r\n                        value={this.state.inputData}\r\n                        onChange={this.handleInputDataChange} />\r\n                </div>\r\n                <div>{this.state.result} rem</div>\r\n                <button onClick={this.calculateResult}>Calculate</button>\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nexport default RemCalculator;\r\n","import React, { Component } from 'react'\r\n\r\nclass TemplateConverter extends Component {\r\n    state = {\r\n        inputText: \"\",\r\n        outputText: \"\",\r\n        variableName: \"returnHtml\",\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"Start TemplateConverter\");\r\n    }\r\n\r\n    /**\r\n     * 원본 텍스트를 자바스크립트에서 사용하기 위한\r\n     * 텍스트로 변환합니다.\r\n     * @param {string} text 원본 텍스트\r\n     * @returns 자바스크립트 변수로 변환\r\n     */\r\n    convert = (text) => {\r\n        let textLines = text.split(/\\r?\\n/);\r\n        let resultLines = [];\r\n        textLines.forEach(line => {\r\n            resultLines.push(this.state.variableName + \" += '\" + line + \"';\");\r\n        });\r\n        return resultLines.join(\"\\n\");\r\n    };\r\n\r\n    handleClickConvertButton = () => {\r\n        this.setState({\r\n            outputText: this.convert(this.state.inputText)\r\n        });\r\n    };\r\n\r\n    handleChangeInputText = (event) => {\r\n        this.setState({\r\n            inputText: event.target.value\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n           <div>\r\n               <h2>템플릿 컨버터</h2>\r\n               <textarea cols=\"30\" rows=\"10\" value={this.state.inputText} onChange={this.handleChangeInputText}></textarea>\r\n               <button onClick={this.handleClickConvertButton}>변환</button>\r\n               <textarea cols=\"30\" rows=\"10\" value={this.state.outputText} readOnly></textarea>\r\n           </div>\r\n       );\r\n    }\r\n}\r\n\r\nexport default TemplateConverter;","import './App.css';\nimport { Component } from 'react';\nimport Home from './Home';\nimport { Route } from 'react-router';\nimport { NavLink } from 'react-router-dom';\nimport About from './About';\nimport RemCalculator from './RemCalculator';\nimport TemplateConverter from './TemplateConverter';\n\nclass App extends Component {\n    state = {\n        menuList: {\n            home: true,\n            showRemCalculator: false,\n        }\n    }\n\n    showMenu = (menuName) => {\n        let menuList = this.state.menuList;\n        Object.keys(menuList).forEach(key=>{\n            menuList[key] = false;\n        })\n        this.setState({\n            menuList: menuList\n        })\n        switch (menuName) {\n            case \"remCalculator\":\n                this.setState({\n                    menuList: {\n                        ...this.state.menuList,\n                        showRemCalculator: true\n                    }\n                })\n                break;\n            default:\n                this.setState({\n                    menuList: {\n                        ...this.state.menuList,\n                        home: true\n                    }\n                })\n                break;\n        }\n    };\n\n    showHome = () => {\n        this.showMenu(\"home\");\n    };\n\n    showRemCalculator = () => {\n        this.showMenu(\"remCalculator\");\n    };\n\n    render() {\n        return (\n            <div className=\"app\">\n                <header className=\"app-header\">\n                    Welcome\n                </header>\n                <ul className=\"nav\">\n                    <li><NavLink exact to=\"/\" activeClassName=\"active\">Home</NavLink></li>\n                    <li><NavLink exact to=\"/about\" activeClassName=\"active\">About</NavLink></li>\n                    <li><NavLink exact to=\"/rem\" activeClassName=\"active\">rem 계산기</NavLink></li>\n                    <li><NavLink exact to=\"/converter\" activeClassName=\"active\">템플릿 변환기</NavLink></li>\n                </ul>\n                <Route exact path=\"/\" component={Home}/>\n                <Route exact path=\"/about\" component={About}></Route>\n                <Route exact path=\"/rem\" component={RemCalculator}></Route>\n                <Route exact path=\"/converter\" component={TemplateConverter}></Route>\n            </div>\n        )\n    }\n}\n\nexport default App;\n","import { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\n\r\nconst Root = () => (\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>\r\n);\r\n\r\nexport default Root;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Root from './Root';\n\nReactDOM.render(\n    <Root/>,\n    document.querySelector('#root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}